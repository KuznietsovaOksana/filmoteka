{"mappings":"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","sources":["src/library.js","src/js/library-cards.js"],"sourcesContent":["// import cardTemplate from './templates/film-card.hbs';\n// import './js/pagination';\n// import './js/to-top';\n// import './js/preloader';\nimport './js/theme-switch';\nimport './js/library-cards';\nimport './js/modal-open-card';\n","import { loaderRender } from './preloader';\nimport cardTemplate from '../templates/film-card.hbs';\nimport { numberConverter } from './prepare-number';\n\nconst paginationBox = document.querySelector('.pagination__list');\nconst cards = document.querySelector('.cards');\nconst emptyEl = document.querySelector('.empty');\nconst modalOpenEl = document.querySelector('.cards');\nconst modalCloseEl = document.querySelector('[data-modal-close]');\nconst modalEl = document.querySelector('[data-modal]');\nconst backdropEl = document.querySelector('.backdrop');\nconst watchedFilmListBtnEl = document.getElementById('js-WatchedButton');\nconst queuedFilmListBtnEl = document.getElementById('js-QueueButton');\nconst WATCHED_STORAGE_KEY = \"watched films\";\nconst QUEUE_STORAGE_KEY = \"films in queue\";\nlet globalCurrentPage = 1;\nlet renderFilmCardPage = null;\n\nloaderRender();\n\nwatchedFilmListBtnEl.addEventListener('click', onLSLoadWatched);\nqueuedFilmListBtnEl.addEventListener('click', onLSLoadQueue);\n\n// слухач на батьківський UL карток\nmodalOpenEl.addEventListener('click', onModalOpenClick);\n\n// ==============================================\n// Початкова ініціалізація сторінки\nonLSLoadWatched(\"watched films\");\n// ==============================================\n\n\n// ================================================\n// Функція зчитування даних з ЛС\n// повертає масив об'єктів або null\nfunction readFromLS(key) {\n    let filmsArray = JSON.parse(localStorage.getItem(key));\n    // перевірка на наявність масиву в ЛС\n    if (filmsArray === null) {\n        return;\n    }\n    return filmsArray;\n};\n// ================================================\n\n\n// ===========================================================\n// Функції-обробники перемикача в хедері\n// Функція-обробник кліку перемикача QUEUE\nfunction onLSLoadWatched() {\n    // перевірка на наявність масиву в ЛС\n    let filmsArray = JSON.parse(localStorage.getItem(WATCHED_STORAGE_KEY));\n    if (filmsArray === null) {\n        return;\n    }\n    contentRender(WATCHED_STORAGE_KEY, 'watched', 1);\n}\n\n// Функція-обробник кліку перемикача WATCHED\nfunction onLSLoadQueue() {\n    // перевірка на наявність масиву в ЛС\n    let filmsArray = JSON.parse(localStorage.getItem(QUEUE_STORAGE_KEY));\n    if (filmsArray === null) {\n        return;\n    }\n    contentRender(QUEUE_STORAGE_KEY, 'queued', 1);\n}\n// ===========================================================\n\n\n// ===========================================================\n// Універсальна функція вимальовки всього контенту на стоірнці\nfunction contentRender(storageKey, attrib, currPage) {\n    // витягує масив фільмів з ЛС\n    const filmArr = readFromLS(storageKey);\n\n    // перевірка на наявність масиву в ЛС\n    if (filmArr === null) {\n        return;\n    }\n\n    // змінює дата-атрибут\n    cards.dataset.position = attrib;\n\n    // Визначаю кількість сторінок\n    let allPages = splitArrayOnSubarrays(filmArr).length;\n\n    // Обрізка масиву на порції\n    // При цьому треба пам'ятати, що нумерація порції даних\n    // (тобто масива в масиві) починається з 0\n    renderFilmCardPage = currPage - 1;\n    let arrPortion = splitArrayOnSubarrays(filmArr)[renderFilmCardPage];\n\n    // рендерить масив фільмів\n    renderFilmCards(arrPortion, currPage);\n\n    // рендерить пагінацію\n    paginationMarkupRender(currPage, allPages);\n}\n// ===========================================================\n\n\n// ===========================================================\n// Функція, що підготовлює дані в картки для рендеру\n// - Приймає масив об'єктів\n// - Рендерить об'єкти в картки на сторінці\nfunction renderFilmCards(films) {\n\n    const markup = films.map(film => {\n\n        const rating = numberConverter(film.vote_average);\n\n        // Формую підготовлений об'єкт даних для закидання в handlebar\n        const editedFilm = {\n            ...film,\n            poster_path: `https://image.tmdb.org/t/p/w500${film.poster_path}`,\n            genres: film.filmGenres,\n            release_date: film.release_date.slice(0, 4),\n            vote_average: rating,\n        };\n        return editedFilm;\n    });\n\n    emptyEl.innerHTML = '';\n    cards.innerHTML = cardTemplate(markup);\n}\n// ===========================================================\n\n\n\n\n\n// ======================================\n// PAGINATION\n// Обробка результатів пошуку\n// ======================================\n\npaginationBox.addEventListener('click', onPaginationLibraryClick);\n\n// Функція розбивки масиву на підмасиви\n// - повертає масив масивів\nfunction splitArrayOnSubarrays(array) {\n    // console.log(array);\n    const allCards = 20;\n    const sliceArr = array\n        .map(function (el, ind) {\n            return ind % allCards === 0 ? array.slice(ind, ind + allCards) : null;\n        })\n        .filter(function (el) {\n            return el;\n        });\n    // Повертає масив масивів\n    return sliceArr;\n}\n\n// Функція рендеру кнопок пагінації\nfunction paginationMarkupRender(currentPage, allPages) {\n    let markup = '';\n    let beforeTwoPage = currentPage - 2;\n    let beforePage = currentPage - 1;\n    globalCurrentPage = currentPage;\n    let afterPage = currentPage + 1;\n    let afterTwoPage = currentPage + 2;\n\n    if (currentPage > 1) {\n        markup += `<li class=\"pagination__item slider-arrow prev\">&#129144</li>`;\n        markup += `<li class=\"pagination__item\">1</li>`;\n    }\n    if (currentPage > 4) {\n        markup += `<li class=\"pagination__item dots\">...</li>`;\n    }\n    if (currentPage > 3) {\n        markup += `<li class=\"pagination__item\">${beforeTwoPage}</li>`;\n    }\n    if (currentPage > 2) {\n        markup += `<li class=\"pagination__item\">${beforePage}</li>`;\n    }\n    markup += `<li class=\"pagination__item pagination__item--current\">${currentPage}</li>`;\n\n    if (allPages - 1 > currentPage) {\n        markup += `<li class=\"pagination__item\">${afterPage}</li>`;\n    }\n    if (allPages - 2 > currentPage) {\n        markup += `<li class=\"pagination__item\">${afterTwoPage}</li>`;\n    }\n    if (allPages - 3 > currentPage) {\n        markup += `<li class=\"pagination__item dots\">...</li>`;\n    }\n    if (allPages > currentPage) {\n        markup += `<li class=\"pagination__item\">${allPages}</li>`;\n        markup += `<li class=\"pagination__item slider-arrow next\">&#129146</li>`;\n    }\n    paginationBox.innerHTML = markup;\n}\n\n// Функція обробки кліків пагінації\nfunction onPaginationLibraryClick(event) {\n    if (event.target.nodeName !== 'LI') {\n        return;\n    }\n    if (event.target.textContent === '...') {\n        return;\n    }\n    if (event.target.textContent === '🡸') {\n        if (cards.dataset.position === 'watched') {\n            globalCurrentPage -= 1;\n            contentRender(WATCHED_STORAGE_KEY, 'watched', globalCurrentPage);\n            return;\n        }\n        if (cards.dataset.position === 'queued') {\n            globalCurrentPage -= 1;\n            contentRender(QUEUE_STORAGE_KEY, 'queued', globalCurrentPage);\n            return;\n        }\n    }\n    if (event.target.textContent === '🡺') {\n        if (cards.dataset.position === 'watched') {\n            globalCurrentPage += 1;\n            contentRender(WATCHED_STORAGE_KEY, 'watched', globalCurrentPage);\n            return;\n        }\n        if (cards.dataset.position === 'queued') {\n            globalCurrentPage += 1;\n            contentRender(QUEUE_STORAGE_KEY, 'queued', globalCurrentPage);\n            return;\n        }\n    }\n\n    const page = Number(event.target.textContent);\n    globalCurrentPage = page;\n    if (cards.dataset.position === 'watched') {\n        contentRender(WATCHED_STORAGE_KEY, 'watched', globalCurrentPage);\n        return;\n    }\n    if (cards.dataset.position === 'queued') {\n        contentRender(QUEUE_STORAGE_KEY, 'queued', globalCurrentPage);\n        return;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// =======================================\n// Функції відкриття / закриття модалки\n// =======================================\nasync function onModalOpenClick(event) {\n    event.preventDefault();\n    if (event.target.closest('li')) {\n        modalEl.classList.remove('is-hidden');\n        modalCloseEl.addEventListener('click', onModalCloseClick);\n        backdropEl.addEventListener('click', onBackdropElClick);\n        window.addEventListener('keydown', onEscBtnClick);\n        console.log(\"I clicked on card\");\n    }\n}\n\nfunction onModalCloseClick() {\n    modalEl.classList.add('is-hidden');\n    modalCloseEl.removeEventListener('click', onModalCloseClick);\n    backdropEl.removeEventListener('click', onBackdropElClick);\n    window.removeEventListener('keydown', onEscBtnClick);\n\n    // Викликаю функцію ререндеру вмісту сторінки бібліотеки\n    // Умови для ререндеру\n    if (cards.dataset.position === \"queued\") {\n        contentRender(QUEUE_STORAGE_KEY, 'queued', 1);\n    }\n    if (cards.dataset.position === \"watched\") {\n        contentRender(WATCHED_STORAGE_KEY, 'watched', 1);\n    }\n\n}\n\nfunction onBackdropElClick(event) {\n    if (event.target === backdropEl) {\n        onModalCloseClick();\n    }\n}\n\nfunction onEscBtnClick(event) {\n    if (event.code === 'Escape') {\n        onModalCloseClick();\n    }\n}\n// ======================================="],"names":["parcelRequire","$ioBS9","$120d9dea778dffdf$var$paginationBox","document","querySelector","$120d9dea778dffdf$var$cards","$120d9dea778dffdf$var$emptyEl","$120d9dea778dffdf$var$modalOpenEl","$120d9dea778dffdf$var$modalCloseEl","$120d9dea778dffdf$var$modalEl","$120d9dea778dffdf$var$backdropEl","$120d9dea778dffdf$var$watchedFilmListBtnEl","getElementById","$120d9dea778dffdf$var$queuedFilmListBtnEl","$120d9dea778dffdf$var$globalCurrentPage","$120d9dea778dffdf$var$renderFilmCardPage","$120d9dea778dffdf$var$onLSLoadWatched","JSON","parse","localStorage","getItem","$120d9dea778dffdf$var$contentRender","storageKey","attrib","currPage","filmArr","key","filmsArray","$120d9dea778dffdf$var$readFromLS","dataset","position","allPages","$120d9dea778dffdf$var$splitArrayOnSubarrays","length","films","markup","map","film","rating","$3ab2c","numberConverter","vote_average","poster_path","genres","filmGenres","release_date","slice","innerHTML","$kW34H","default","$120d9dea778dffdf$var$renderFilmCards","currentPage","beforeTwoPage","beforePage","afterPage","afterTwoPage","$120d9dea778dffdf$var$paginationMarkupRender","array","el","ind","filter","$120d9dea778dffdf$var$onModalCloseClick","classList","add","removeEventListener","$120d9dea778dffdf$var$onBackdropElClick","window","$120d9dea778dffdf$var$onEscBtnClick","event","target","code","loaderRender","addEventListener","async","preventDefault","closest","remove","console","log","nodeName","textContent","page","Number"],"version":3,"file":"library.a4f81a65.js.map"}