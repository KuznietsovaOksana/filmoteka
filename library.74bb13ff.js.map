{"mappings":"iiBAIAA,EAAA,SCJA,IAAAC,EAAAD,EAAA,S,iEAIME,EAAgBC,SAASC,cAAc,qBACvCC,EAAQF,SAASC,cAAc,UAC/BE,EAAUH,SAASC,cAAc,UACjCG,EAAcJ,SAASC,cAAc,UACrCI,EAAeL,SAASC,cAAc,sBACtCK,EAAUN,SAASC,cAAc,gBACjCM,EAAaP,SAASC,cAAc,aACpCO,EAAuBR,SAASS,eAAe,oBAC/CC,EAAsBV,SAASS,eAAe,kBAC9CE,EAAsB,gBACtBC,EAAoB,iBACtBC,EAAoB,EACpBC,EAAqB,KAmBF,SAAdC,EAAWC,GAChB,IAAIC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQL,IAEpB,GAAV,OAAfC,EAGJ,OAAOA,C,CAQmB,SAArBK,IAGc,OADFJ,KAAKC,MAAMC,aAAaC,QAAQV,KAOjDY,EAAcZ,EAAqB,UAAW,E,CAiBG,SAA5CY,EAAcC,EAAYC,EAAQC,GAEjB,IAAhBC,EAAUZ,EAAWS,GAGE,GAAb,OAAZG,EAAyB,CAKZzB,EAAX0B,QAAQC,SAAWJ,EAEYvB,EAA/B0B,QAAQE,KAAOJ,EAGI,IAArBK,EAAWC,EAAsBL,GAASM,OAKhBnB,EAATY,EAAW,EAChC,IAAIQ,EAAaF,EAAsBL,GAASb,GAG7B,cAAfoB,IAiBwB,SAAPC,GACrB,QAAcC,IAAVD,EACA,OAGJ,IAAME,EAASF,EAAMG,KAAI,SAAAC,GAErB,IAAMC,GAAS,EAAAC,EAAAC,iBAAgBH,EAAKI,cAUpC,OAPmBC,EAAAC,EAAA,IACZN,EAAI,CACPO,YAAa,kCAAmDC,OAAjBR,EAAKO,aACpDE,OAAQT,EAAKU,WACbC,aAAcX,EAAKW,aAAaC,MAAM,EAAG,GACzCR,aAAcH,G,IAKtBrC,EAAQiD,UAAY,GACpBlD,EAAMkD,WAAY,EAAAC,EAAAC,SAAajB,E,CAjCVkB,CAALrB,GAiES,SAAGsB,EAAazB,GACzC,IAAIM,EAAS,GACToB,EAAgBD,EAAc,EAC9BE,EAAaF,EAAc,EAC/B3C,EAAoB2C,EACpB,IAAIG,EAAYH,EAAc,EAC1BI,EAAeJ,EAAc,EAE7BA,EAAc,IACdnB,GAAW,+DACXA,GAAW,uCAEXmB,EAAc,IACdnB,GAAW,8CAEXmB,EAAc,IACdnB,GAAU,gCAA8CU,OAAdU,EAAc,UAExDD,EAAc,IACdnB,GAAU,gCAA2CU,OAAXW,EAAW,UAEzDrB,GAAU,0DAAsEU,OAAZS,EAAY,SAE5EzB,EAAW,EAAIyB,IACfnB,GAAU,gCAA0CU,OAAVY,EAAU,UAEpD5B,EAAW,EAAIyB,IACfnB,GAAU,gCAA6CU,OAAba,EAAa,UAEvD7B,EAAW,EAAIyB,IACfnB,GAAW,8CAEXN,EAAWyB,IACXnB,GAAU,gCAAyCU,OAAThB,EAAS,SACnDM,GAAW,gEAEftC,EAAcqD,UAAYf,C,CAlGRwB,CAAKnC,EAAUK,GA1B7B,C,CAyEY,SAAXC,EAAsB8B,GAWP,OARHA,EACZxB,KAAI,SAAUyB,EAAIC,GACf,OAAOA,EAHE,IAGiB,EAAIF,EAAMX,MAAMa,EAAKA,EAHtC,IAGwD,I,IAEpEC,QAAO,SAAUF,GACd,OAAOA,C,aA4GJG,I,OAAAA,EAAftB,EAAA9C,EAAA,CAAA8C,EAAAuB,GAAAC,MAAA,SAAAC,EAAgCC,G,kEAC5BA,EAAMC,iBACFD,EAAME,OAAOC,QAAQ,QACrBnE,EAAQoE,UAAUC,OAAO,aACzBtE,EAAauE,iBAAiB,QAASC,GACvCtE,EAAWqE,iBAAiB,QAASE,GACrCC,OAAOH,iBAAiB,UAAWI,GACnCC,QAAQC,IAAI,sB,4CAPWC,MAAAC,KAAAC,U,CAW/B,SAASR,IAQY,GAPjBvE,EAAQoE,UAAUY,IAAI,aACtBjF,EAAakF,oBAAoB,QAASV,GAC1CtE,EAAWgF,oBAAoB,QAAST,GACxCC,OAAOQ,oBAAoB,UAAWP,GAIP,YAA3B9E,EAAM0B,QAAQC,SAAwB,CAEtC,IAAI2D,EAAeC,OAAOvF,EAAM0B,QAAQE,MACxCP,EAAcZ,EAAqB,UAAW6E,E,CAElD,GAA+B,WAA3BtF,EAAM0B,QAAQC,SAAuB,CAErC,IAAMF,EAAUZ,EAAWH,GACvBmB,EAAWC,EAAsBL,GAASM,OAC1CC,EAAaF,EAAsBL,GAASb,GAIhD,GAHAmE,QAAQC,IAAI,gBAAiBnD,GAC7BkD,QAAQC,IAAI,kBAAmBhD,GAE3BhC,EAAM0B,QAAQE,OAASC,GAAkC,IAAtBG,EAAWD,OAE9C,YADAV,EAAcX,EAAmB,SAAU,GAO/C,IAAI8E,EAAeD,OAAOvF,EAAM0B,QAAQE,MACxCP,EAAcX,EAAmB,SAAU8E,E,EAKnD,SAASZ,EAAkBR,GACnBA,EAAME,SAAWjE,GACjBsE,G,CAIR,SAASG,EAAcV,GACA,WAAfA,EAAMqB,MACNd,G,EAlTR,EAAAe,EAAAC,gBAEArF,EAAqBoE,iBAAiB,QAAStD,GAC/CZ,EAAoBkE,iBAAiB,SAyCP,WAG1B,GAAmB,OADF1D,KAAKC,MAAMC,aAAaC,QAAQT,IAE7C,OAEJW,EAAcX,EAAmB,SAAU,E,IA5CrBR,EAAdwE,iBAAiB,S,SAsPGN,G,OAAjBJ,EAAgBiB,MAAAC,KAAAC,U,IAlPD/D,IA0H9BvB,EAAc6E,iBAAiB,SA2DF,SAAKN,GAC9B,GAA8B,OAA1BA,EAAME,OAAOsB,SACb,OAEJ,GAAiC,QAA7BxB,EAAME,OAAOuB,YACb,OAEJ,GAAiC,OAA7BzB,EAAME,OAAOuB,YAAwB,CAClC,GAA4B,YAA3B7F,EAAM0B,QAAQC,SAGd,YADAN,EAAcZ,EAAqB,UADnCE,GAAqB,GAIzB,GAA+B,WAA3BX,EAAM0B,QAAQC,SAGd,YADAN,EAAcX,EAAmB,SADjCC,GAAqB,E,CAK7B,GAAiC,OAA7ByD,EAAME,OAAOuB,YAAwB,CAClC,GAA4B,YAA3B7F,EAAM0B,QAAQC,SAGd,YADAN,EAAcZ,EAAqB,UADnCE,GAAqB,GAIzB,GAA+B,WAA3BX,EAAM0B,QAAQC,SAGd,YADAN,EAAcX,EAAmB,SADjCC,GAAqB,E,CAM7B,IAAMiB,EAAO2D,OAAOnB,EAAME,OAAOuB,aAEjC,GADAlF,EAAoBiB,EACW,YAA3B5B,EAAM0B,QAAQC,SAEd,YADAN,EAAcZ,EAAqB,UAAWE,GAGlD,GAA+B,WAA3BX,EAAM0B,QAAQC,SAEd,YADAN,EAAcX,EAAmB,SAAUC,E","sources":["src/library.js","src/js/library-cards.js"],"sourcesContent":["// import cardTemplate from './templates/film-card.hbs';\n// import './js/pagination';\n// import './js/to-top';\n// import './js/preloader';\nimport './js/theme-switch';\nimport './js/library-cards';\nimport './js/modal-open-card';\n","import { loaderRender } from './preloader';\nimport cardTemplate from '../templates/film-card.hbs';\nimport { numberConverter } from './prepare-number';\n\nconst paginationBox = document.querySelector('.pagination__list');\nconst cards = document.querySelector('.cards');\nconst emptyEl = document.querySelector('.empty');\nconst modalOpenEl = document.querySelector('.cards');\nconst modalCloseEl = document.querySelector('[data-modal-close]');\nconst modalEl = document.querySelector('[data-modal]');\nconst backdropEl = document.querySelector('.backdrop');\nconst watchedFilmListBtnEl = document.getElementById('js-WatchedButton');\nconst queuedFilmListBtnEl = document.getElementById('js-QueueButton');\nconst WATCHED_STORAGE_KEY = \"watched films\";\nconst QUEUE_STORAGE_KEY = \"films in queue\";\nlet globalCurrentPage = 1;\nlet renderFilmCardPage = null;\n\nloaderRender();\n\nwatchedFilmListBtnEl.addEventListener('click', onLSLoadWatched);\nqueuedFilmListBtnEl.addEventListener('click', onLSLoadQueue);\n\n// слухач на батьківський UL карток\nmodalOpenEl.addEventListener('click', onModalOpenClick);\n\n// ==============================================\n// Початкова ініціалізація сторінки\nonLSLoadWatched(\"watched films\");\n// ==============================================\n\n\n// ================================================\n// Функція зчитування даних з ЛС\n// повертає масив об'єктів або null\nfunction readFromLS(key) {\n    let filmsArray = JSON.parse(localStorage.getItem(key));\n    // перевірка на наявність масиву в ЛС\n    if (filmsArray === null) {\n        return;\n    }\n    return filmsArray;\n};\n// ================================================\n\n\n// ===========================================================\n// Функції-обробники перемикача в хедері\n// Функція-обробник кліку перемикача QUEUE\nfunction onLSLoadWatched() {\n    // перевірка на наявність масиву в ЛС\n    let filmsArray = JSON.parse(localStorage.getItem(WATCHED_STORAGE_KEY));\n    if (filmsArray === null) {\n        return;\n    }\n\n\n\n    contentRender(WATCHED_STORAGE_KEY, 'watched', 1);\n}\n\n// Функція-обробник кліку перемикача WATCHED\nfunction onLSLoadQueue() {\n    // перевірка на наявність масиву в ЛС\n    let filmsArray = JSON.parse(localStorage.getItem(QUEUE_STORAGE_KEY));\n    if (filmsArray === null) {\n        return;\n    }\n    contentRender(QUEUE_STORAGE_KEY, 'queued', 1);\n}\n// ===========================================================\n\n\n// ===========================================================\n// Універсальна функція вимальовки всього контенту на стоірнці\nfunction contentRender(storageKey, attrib, currPage) {\n    // витягує масив фільмів з ЛС\n    const filmArr = readFromLS(storageKey);\n\n    // перевірка на наявність масиву в ЛС\n    if (filmArr === null) {\n        return;\n    }\n\n    // змінює дата-атрибут\n    cards.dataset.position = attrib;\n    // Додаєм атрибут поточної позиції пагінації\n    cards.dataset.page = currPage;\n\n    // Визначаю кількість сторінок\n    let allPages = splitArrayOnSubarrays(filmArr).length;\n\n    // Обрізка масиву на порції\n    // При цьому треба пам'ятати, що нумерація порції даних\n    // (тобто масива в масиві) починається з 0\n    renderFilmCardPage = currPage - 1;\n    let arrPortion = splitArrayOnSubarrays(filmArr)[renderFilmCardPage];\n\n    // Перевірка підмасиву на те, чи він не пустий\n    if (arrPortion === \"undefined\") {\n        return;\n    }\n\n    // рендерить масив фільмів\n    renderFilmCards(arrPortion, currPage);\n\n    // рендерить пагінацію\n    paginationMarkupRender(currPage, allPages);\n}\n// ===========================================================\n\n\n// ===========================================================\n// Функція, що підготовлює дані в картки для рендеру\n// - Приймає масив об'єктів\n// - Рендерить об'єкти в картки на сторінці\nfunction renderFilmCards(films) {\n    if (films === undefined) {\n        return;\n    }\n\n    const markup = films.map(film => {\n\n        const rating = numberConverter(film.vote_average);\n\n        // Формую підготовлений об'єкт даних для закидання в handlebar\n        const editedFilm = {\n            ...film,\n            poster_path: `https://image.tmdb.org/t/p/w500${film.poster_path}`,\n            genres: film.filmGenres,\n            release_date: film.release_date.slice(0, 4),\n            vote_average: rating,\n        };\n        return editedFilm;\n    });\n\n    emptyEl.innerHTML = '';\n    cards.innerHTML = cardTemplate(markup);\n}\n// ===========================================================\n\n\n\n\n\n// ======================================\n// PAGINATION\n// Обробка результатів пошуку\n// ======================================\n\npaginationBox.addEventListener('click', onPaginationLibraryClick);\n\n// Функція розбивки масиву на підмасиви\n// - повертає масив масивів\nfunction splitArrayOnSubarrays(array) {\n\n    const allCards = 20;\n    const sliceArr = array\n        .map(function (el, ind) {\n            return ind % allCards === 0 ? array.slice(ind, ind + allCards) : null;\n        })\n        .filter(function (el) {\n            return el;\n        });\n    // Повертає масив масивів\n    return sliceArr;\n}\n\n// Функція рендеру кнопок пагінації\nfunction paginationMarkupRender(currentPage, allPages) {\n    let markup = '';\n    let beforeTwoPage = currentPage - 2;\n    let beforePage = currentPage - 1;\n    globalCurrentPage = currentPage;\n    let afterPage = currentPage + 1;\n    let afterTwoPage = currentPage + 2;\n\n    if (currentPage > 1) {\n        markup += `<li class=\"pagination__item slider-arrow prev\">&#129144</li>`;\n        markup += `<li class=\"pagination__item\">1</li>`;\n    }\n    if (currentPage > 4) {\n        markup += `<li class=\"pagination__item dots\">...</li>`;\n    }\n    if (currentPage > 3) {\n        markup += `<li class=\"pagination__item\">${beforeTwoPage}</li>`;\n    }\n    if (currentPage > 2) {\n        markup += `<li class=\"pagination__item\">${beforePage}</li>`;\n    }\n    markup += `<li class=\"pagination__item pagination__item--current\">${currentPage}</li>`;\n\n    if (allPages - 1 > currentPage) {\n        markup += `<li class=\"pagination__item\">${afterPage}</li>`;\n    }\n    if (allPages - 2 > currentPage) {\n        markup += `<li class=\"pagination__item\">${afterTwoPage}</li>`;\n    }\n    if (allPages - 3 > currentPage) {\n        markup += `<li class=\"pagination__item dots\">...</li>`;\n    }\n    if (allPages > currentPage) {\n        markup += `<li class=\"pagination__item\">${allPages}</li>`;\n        markup += `<li class=\"pagination__item slider-arrow next\">&#129146</li>`;\n    }\n    paginationBox.innerHTML = markup;\n}\n\n// Функція обробки кліків пагінації\nfunction onPaginationLibraryClick(event) {\n    if (event.target.nodeName !== 'LI') {\n        return;\n    }\n    if (event.target.textContent === '...') {\n        return;\n    }\n    if (event.target.textContent === '🡸') {\n        if (cards.dataset.position === 'watched') {\n            globalCurrentPage -= 1;\n            contentRender(WATCHED_STORAGE_KEY, 'watched', globalCurrentPage);\n            return;\n        }\n        if (cards.dataset.position === 'queued') {\n            globalCurrentPage -= 1;\n            contentRender(QUEUE_STORAGE_KEY, 'queued', globalCurrentPage);\n            return;\n        }\n    }\n    if (event.target.textContent === '🡺') {\n        if (cards.dataset.position === 'watched') {\n            globalCurrentPage += 1;\n            contentRender(WATCHED_STORAGE_KEY, 'watched', globalCurrentPage);\n            return;\n        }\n        if (cards.dataset.position === 'queued') {\n            globalCurrentPage += 1;\n            contentRender(QUEUE_STORAGE_KEY, 'queued', globalCurrentPage);\n            return;\n        }\n    }\n\n    const page = Number(event.target.textContent);\n    globalCurrentPage = page;\n    if (cards.dataset.position === 'watched') {\n        contentRender(WATCHED_STORAGE_KEY, 'watched', globalCurrentPage);\n        return;\n    }\n    if (cards.dataset.position === 'queued') {\n        contentRender(QUEUE_STORAGE_KEY, 'queued', globalCurrentPage);\n        return;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// =======================================\n// Функції відкриття / закриття модалки\n// =======================================\nasync function onModalOpenClick(event) {\n    event.preventDefault();\n    if (event.target.closest('li')) {\n        modalEl.classList.remove('is-hidden');\n        modalCloseEl.addEventListener('click', onModalCloseClick);\n        backdropEl.addEventListener('click', onBackdropElClick);\n        window.addEventListener('keydown', onEscBtnClick);\n        console.log(\"I clicked on card\");\n    }\n}\n\nfunction onModalCloseClick() {\n    modalEl.classList.add('is-hidden');\n    modalCloseEl.removeEventListener('click', onModalCloseClick);\n    backdropEl.removeEventListener('click', onBackdropElClick);\n    window.removeEventListener('keydown', onEscBtnClick);\n\n    // Викликаю функцію ререндеру вмісту сторінки бібліотеки\n    // Умови для ререндеру\n    if (cards.dataset.position === \"watched\") {\n\n        let currDataPage = Number(cards.dataset.page);\n        contentRender(WATCHED_STORAGE_KEY, 'watched', currDataPage);\n    }\n    if (cards.dataset.position === \"queued\") {\n\n        const filmArr = readFromLS(QUEUE_STORAGE_KEY);\n        let allPages = splitArrayOnSubarrays(filmArr).length;\n        let arrPortion = splitArrayOnSubarrays(filmArr)[renderFilmCardPage];\n        console.log('allPages :>> ', allPages);\n        console.log('arrPortion :>> ', arrPortion);\n\n        if (cards.dataset.page === allPages && arrPortion.length === 1) {\n            contentRender(QUEUE_STORAGE_KEY, 'queued', 1);\n            return;\n        }\n\n        // Якщо наш атрибут dataset.page === allPages\n        // І якщо arrPortion.length === 1\n\n        let currDataPage = Number(cards.dataset.page);\n        contentRender(QUEUE_STORAGE_KEY, 'queued', currDataPage);\n    }\n\n}\n\nfunction onBackdropElClick(event) {\n    if (event.target === backdropEl) {\n        onModalCloseClick();\n    }\n}\n\nfunction onEscBtnClick(event) {\n    if (event.code === 'Escape') {\n        onModalCloseClick();\n    }\n}\n// ======================================="],"names":["parcelRequire","$bpxeT","$7a281c26fced4abd$var$paginationBox","document","querySelector","$7a281c26fced4abd$var$cards","$7a281c26fced4abd$var$emptyEl","$7a281c26fced4abd$var$modalOpenEl","$7a281c26fced4abd$var$modalCloseEl","$7a281c26fced4abd$var$modalEl","$7a281c26fced4abd$var$backdropEl","$7a281c26fced4abd$var$watchedFilmListBtnEl","getElementById","$7a281c26fced4abd$var$queuedFilmListBtnEl","$7a281c26fced4abd$var$WATCHED_STORAGE_KEY","$7a281c26fced4abd$var$QUEUE_STORAGE_KEY","$7a281c26fced4abd$var$globalCurrentPage","$7a281c26fced4abd$var$renderFilmCardPage","$7a281c26fced4abd$var$readFromLS","key","filmsArray","JSON","parse","localStorage","getItem","$7a281c26fced4abd$var$onLSLoadWatched","$7a281c26fced4abd$var$contentRender","storageKey","attrib","currPage","filmArr","dataset","position","page","allPages","$7a281c26fced4abd$var$splitArrayOnSubarrays","length","arrPortion","films","undefined","markup","map","film","rating","$2GCP7","numberConverter","vote_average","$parcel$interopDefault","$dDDEV","poster_path","concat","genres","filmGenres","release_date","slice","innerHTML","$3ha8z","default","$7a281c26fced4abd$var$renderFilmCards","currentPage","beforeTwoPage","beforePage","afterPage","afterTwoPage","$7a281c26fced4abd$var$paginationMarkupRender","array","el","ind","filter","$7a281c26fced4abd$var$_onModalOpenClick","$2TvXO","mark","_callee","event","preventDefault","target","closest","classList","remove","addEventListener","$7a281c26fced4abd$var$onModalCloseClick","$7a281c26fced4abd$var$onBackdropElClick","window","$7a281c26fced4abd$var$onEscBtnClick","console","log","apply","this","arguments","add","removeEventListener","currDataPage","Number","currDataPage1","code","$4smAb","loaderRender","nodeName","textContent"],"version":3,"file":"library.74bb13ff.js.map"}