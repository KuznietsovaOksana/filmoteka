import { loaderRender } from './preloader';
import cardTemplate from '../templates/film-card.hbs';
import { numberConverter } from './prepare-number';

const paginationBox = document.querySelector('.pagination__list');
const cards = document.querySelector('.cards');
const emptyEl = document.querySelector('.empty');
const modalOpenEl = document.querySelector('.cards');
const modalCloseEl = document.querySelector('[data-modal-close]');
const modalEl = document.querySelector('[data-modal]');
const backdropEl = document.querySelector('.backdrop');
const watchedFilmListBtnEl = document.getElementById('js-WatchedButton');
const queuedFilmListBtnEl = document.getElementById('js-QueueButton');
const WATCHED_STORAGE_KEY = "watched films";
const QUEUE_STORAGE_KEY = "films in queue";
let globalCurrentPage = 1;
let renderFilmCardPage = null;

loaderRender();

watchedFilmListBtnEl.addEventListener('click', onLSLoadWatched);
queuedFilmListBtnEl.addEventListener('click', onLSLoadQueue);

// —Å–ª—É—Ö–∞—á –Ω–∞ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π UL –∫–∞—Ä—Ç–æ–∫
modalOpenEl.addEventListener('click', onModalOpenClick);

// ==============================================
// –ü–æ—á–∞—Ç–∫–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
onLSLoadWatched();
// ==============================================


// ================================================
// –§—É–Ω–∫—Ü—ñ—è –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –õ–°
// –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ –∞–±–æ null
function readFromLS(key) {
    let filmsArray = JSON.parse(localStorage.getItem(key));
    // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–∞—Å–∏–≤—É –≤ –õ–°
    if (filmsArray === null) {
        return;
    }
    return filmsArray;
};
// ================================================


// ===========================================================
// –§—É–Ω–∫—Ü—ñ—ó-–æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–µ—Ä–µ–º–∏–∫–∞—á–∞ –≤ —Ö–µ–¥–µ—Ä—ñ
// –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –ø–µ—Ä–µ–º–∏–∫–∞—á–∞ QUEUE
function onLSLoadWatched() {
    contentRender(WATCHED_STORAGE_KEY, 'watched', 1);
}

// –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –ø–µ—Ä–µ–º–∏–∫–∞—á–∞ WATCHED
function onLSLoadQueue() {
    contentRender(QUEUE_STORAGE_KEY, 'queued', 1);
}
// ===========================================================


// ===========================================================
// –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–º–∞–ª—å–æ–≤–∫–∏ –≤—Å—å–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –Ω–∞ —Å—Ç–æ—ñ—Ä–Ω—Ü—ñ
function contentRender(storageKey, attrib, currPage) {
    // –≤–∏—Ç—è–≥—É—î –º–∞—Å–∏–≤ —Ñ—ñ–ª—å–º—ñ–≤ –∑ –õ–°
    const filmArr = readFromLS(storageKey);

    // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–∞—Å–∏–≤—É –≤ –õ–°
    if (filmArr === null) {
        return;
    }

    // –∑–º—ñ–Ω—é—î –¥–∞—Ç–∞-–∞—Ç—Ä–∏–±—É—Ç
    cards.dataset.position = attrib;

    // –í–∏–∑–Ω–∞—á–∞—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫
    let allPages = splitArrayOnSubarrays(filmArr).length;

    // –û–±—Ä—ñ–∑–∫–∞ –º–∞—Å–∏–≤—É –Ω–∞ –ø–æ—Ä—Ü—ñ—ó
    // –ü—Ä–∏ —Ü—å–æ–º—É —Ç—Ä–µ–±–∞ –ø–∞–º'—è—Ç–∞—Ç–∏, —â–æ –Ω—É–º–µ—Ä–∞—Ü—ñ—è –ø–æ—Ä—Ü—ñ—ó –¥–∞–Ω–∏—Ö
    // (—Ç–æ–±—Ç–æ –º–∞—Å–∏–≤–∞ –≤ –º–∞—Å–∏–≤—ñ) –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ 0
    renderFilmCardPage = currPage - 1;
    let arrPortion = splitArrayOnSubarrays(filmArr)[renderFilmCardPage];
    console.log(arrPortion);

    // —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –º–∞—Å–∏–≤ —Ñ—ñ–ª—å–º—ñ–≤
    renderFilmCards(arrPortion, currPage);

    // —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é
    paginationMarkupRender(currPage, allPages);
}
// ===========================================================


// ===========================================================
// –§—É–Ω–∫—Ü—ñ—è, —â–æ –ø—ñ–¥–≥–æ—Ç–æ–≤–ª—é—î –¥–∞–Ω—ñ –≤ –∫–∞—Ä—Ç–∫–∏ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä—É
// - –ü—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤
// - –†–µ–Ω–¥–µ—Ä–∏—Ç—å –æ–±'—î–∫—Ç–∏ –≤ –∫–∞—Ä—Ç–∫–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
function renderFilmCards(films) {

    const markup = films.map(film => {

        const rating = numberConverter(film.vote_average);

        // –§–æ—Ä–º—É—é –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–π –æ–±'—î–∫—Ç –¥–∞–Ω–∏—Ö –¥–ª—è –∑–∞–∫–∏–¥–∞–Ω–Ω—è –≤ handlebar
        const editedFilm = {
            ...film,
            poster_path: `https://image.tmdb.org/t/p/w500${film.poster_path}`,
            genres: film.filmGenres,
            release_date: film.release_date.slice(0, 4),
            vote_average: rating,
        };
        return editedFilm;
    });

    emptyEl.innerHTML = '';
    cards.innerHTML = cardTemplate(markup);
}
// ===========================================================





// ======================================
// PAGINATION
// –û–±—Ä–æ–±–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É
// ======================================

paginationBox.addEventListener('click', onPaginationLibraryClick);

// –§—É–Ω–∫—Ü—ñ—è —Ä–æ–∑–±–∏–≤–∫–∏ –º–∞—Å–∏–≤—É –Ω–∞ –ø—ñ–¥–º–∞—Å–∏–≤–∏
// - –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–∞—Å–∏–≤—ñ–≤
function splitArrayOnSubarrays(array) {
    // console.log(array);
    const allCards = 20;
    const sliceArr = array
        .map(function (el, ind) {
            return ind % allCards === 0 ? array.slice(ind, ind + allCards) : null;
        })
        .filter(function (el) {
            return el;
        });
    // –ü–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–∞—Å–∏–≤—ñ–≤
    return sliceArr;
}

// –§—É–Ω–∫—Ü—ñ—è —Ä–µ–Ω–¥–µ—Ä—É –∫–Ω–æ–ø–æ–∫ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
function paginationMarkupRender(currentPage, allPages) {
    // currentPage = currentPage + 1;
    console.log(currentPage);
    let markup = '';
    let beforeTwoPage = currentPage - 2;
    let beforePage = currentPage - 1;
    globalCurrentPage = currentPage;
    let afterPage = currentPage + 1;
    let afterTwoPage = currentPage + 2;

    if (currentPage > 1) {
        markup += `<li class="pagination__item slider-arrow prev">&#129144</li>`;
        markup += `<li class="pagination__item">1</li>`;
    }
    if (currentPage > 4) {
        markup += `<li class="pagination__item dots">...</li>`;
    }
    if (currentPage > 3) {
        markup += `<li class="pagination__item">${beforeTwoPage}</li>`;
    }
    if (currentPage > 2) {
        markup += `<li class="pagination__item">${beforePage}</li>`;
    }
    markup += `<li class="pagination__item pagination__item--current">${currentPage}</li>`;

    if (allPages - 1 > currentPage) {
        markup += `<li class="pagination__item">${afterPage}</li>`;
    }
    if (allPages - 2 > currentPage) {
        markup += `<li class="pagination__item">${afterTwoPage}</li>`;
    }
    if (allPages - 3 > currentPage) {
        markup += `<li class="pagination__item dots">...</li>`;
    }
    if (allPages > currentPage) {
        markup += `<li class="pagination__item">${allPages}</li>`;
        markup += `<li class="pagination__item slider-arrow next">&#129146</li>`;
    }
    paginationBox.innerHTML = markup;
}

// –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –∫–ª—ñ–∫—ñ–≤ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
function onPaginationLibraryClick(event) {
    if (event.target.nodeName !== 'LI') {
        return;
    }
    if (event.target.textContent === '...') {
        return;
    }
    if (event.target.textContent === 'ü°∏') {
        if (cards.dataset.position === 'watched') {
            globalCurrentPage -= 1;
            contentRender(WATCHED_STORAGE_KEY, 'watched', globalCurrentPage);
            return;
        }
        if (cards.dataset.position === 'queued') {
            globalCurrentPage -= 1;
            contentRender(QUEUE_STORAGE_KEY, 'queued', globalCurrentPage);
            return;
        }
    }
    if (event.target.textContent === 'ü°∫') {
        if (cards.dataset.position === 'watched') {
            globalCurrentPage += 1;
            contentRender(WATCHED_STORAGE_KEY, 'watched', globalCurrentPage);
            return;
        }
        if (cards.dataset.position === 'queued') {
            globalCurrentPage += 1;
            contentRender(QUEUE_STORAGE_KEY, 'queued', globalCurrentPage);
            return;
        }
    }

    const page = Number(event.target.textContent);
    globalCurrentPage = page;
    if (cards.dataset.position === 'watched') {
        contentRender(WATCHED_STORAGE_KEY, 'watched', globalCurrentPage);
        return;
    }
    if (cards.dataset.position === 'queued') {
        contentRender(QUEUE_STORAGE_KEY, 'queued', globalCurrentPage);
        return;
    }
}















// =======================================
// –§—É–Ω–∫—Ü—ñ—ó –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è / –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–∫–∏
// =======================================
async function onModalOpenClick(event) {
    event.preventDefault();
    if (event.target.closest('li')) {
        modalEl.classList.remove('is-hidden');
        modalCloseEl.addEventListener('click', onModalCloseClick);
        backdropEl.addEventListener('click', onBackdropElClick);
        window.addEventListener('keydown', onEscBtnClick);
        console.log("I clicked on card");
    }
}

function onModalCloseClick() {
    modalEl.classList.add('is-hidden');
    modalCloseEl.removeEventListener('click', onModalCloseClick);
    backdropEl.removeEventListener('click', onBackdropElClick);
    window.removeEventListener('keydown', onEscBtnClick);
}

function onBackdropElClick(event) {
    if (event.target === backdropEl) {
        onModalCloseClick();
    }
}

function onEscBtnClick(event) {
    if (event.code === 'Escape') {
        onModalCloseClick();
    }
}
// =======================================