import { loaderRender } from './preloader';
import cardTemplate from '../templates/film-card.hbs';
import { numberConverter } from './prepare-number';
import searchMan from '../images/emptyLibrary.png';

const paginationBox = document.querySelector('.pagination__list');
const cards = document.querySelector('.cards');
const emptyEl = document.querySelector('.empty');
const modalOpenEl = document.querySelector('.cards');
const modalCloseEl = document.querySelector('[data-modal-close]');
const modalEl = document.querySelector('[data-modal]');
const backdropEl = document.querySelector('.backdrop');
const watchedFilmListBtnEl = document.getElementById('js-WatchedButton');
const queuedFilmListBtnEl = document.getElementById('js-QueueButton');
const WATCHED_STORAGE_KEY = 'watched films';
const QUEUE_STORAGE_KEY = 'films in queue';
const watchedAttr = 'watched';
const queuedAttr = 'queued';
let globalCurrentPage = 1;
let renderFilmCardPage = null;
const cardsPerPage = 5;

loaderRender();

watchedFilmListBtnEl.addEventListener('click', onLSLoadWatched);
queuedFilmListBtnEl.addEventListener('click', onLSLoadQueue);

// —Å–ª—É—Ö–∞—á –Ω–∞ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π UL –∫–∞—Ä—Ç–æ–∫
modalOpenEl.addEventListener('click', onModalOpenClick);

// ================================================
// –ü–æ—á–∞—Ç–∫–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
onLSLoadWatched(WATCHED_STORAGE_KEY);
// ================================================



// ================================================
// –§—É–Ω–∫—Ü—ñ—è –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –õ–°
// –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ –∞–±–æ null
function readFromLS(key) {
    let filmsArray = JSON.parse(localStorage.getItem(key));
    // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–∞—Å–∏–≤—É –≤ –õ–°
    if (filmsArray === null) {
        return;
    }
    return filmsArray;
}
// ================================================



// ===========================================================
// –§—É–Ω–∫—Ü—ñ—ó-–æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–µ—Ä–µ–º–∏–∫–∞—á–∞ –≤ —Ö–µ–¥–µ—Ä—ñ
// –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –ø–µ—Ä–µ–º–∏–∫–∞—á–∞ QUEUE
function onLSLoadWatched() {
    // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–∞—Å–∏–≤—É –≤ –õ–°
    let filmsArray = JSON.parse(localStorage.getItem(WATCHED_STORAGE_KEY));
    if (filmsArray === null) {
        return;
    }

    contentRender(WATCHED_STORAGE_KEY, watchedAttr, 1);
}

// –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É –ø–µ—Ä–µ–º–∏–∫–∞—á–∞ WATCHED
function onLSLoadQueue() {
    // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–∞—Å–∏–≤—É –≤ –õ–°
    let filmsArray = JSON.parse(localStorage.getItem(QUEUE_STORAGE_KEY));
    if (filmsArray === null) {
        return;
    }
    contentRender(QUEUE_STORAGE_KEY, queuedAttr, 1);
}
// ===========================================================



// ===========================================================
// –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–º–∞–ª—å–æ–≤–∫–∏ –≤—Å—å–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –Ω–∞ —Å—Ç–æ—ñ—Ä–Ω—Ü—ñ
function contentRender(storageKey, attrib, currPage) {
    // –≤–∏—Ç—è–≥—É—î –º–∞—Å–∏–≤ —Ñ—ñ–ª—å–º—ñ–≤ –∑ –õ–°
    const filmArr = readFromLS(storageKey);

    // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –º–∞—Å–∏–≤—É –≤ –õ–°
    if (filmArr === null) {
        return;
    }

    // –∑–º—ñ–Ω—é—î –¥–∞—Ç–∞-–∞—Ç—Ä–∏–±—É—Ç
    cards.dataset.position = attrib;
    // –î–æ–¥–∞—î–º –∞—Ç—Ä–∏–±—É—Ç –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–∑–∏—Ü—ñ—ó –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
    cards.dataset.page = currPage;

    // –í–∏–∑–Ω–∞—á–∞—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫
    let allPages = splitArrayOnSubarrays(filmArr).length;

    // –û–±—Ä—ñ–∑–∫–∞ –º–∞—Å–∏–≤—É –Ω–∞ –ø–æ—Ä—Ü—ñ—ó
    // –ü—Ä–∏ —Ü—å–æ–º—É —Ç—Ä–µ–±–∞ –ø–∞–º'—è—Ç–∞—Ç–∏, —â–æ –Ω—É–º–µ—Ä–∞—Ü—ñ—è –ø–æ—Ä—Ü—ñ—ó –¥–∞–Ω–∏—Ö
    // (—Ç–æ–±—Ç–æ –º–∞—Å–∏–≤–∞ –≤ –º–∞—Å–∏–≤—ñ) –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ 0
    renderFilmCardPage = currPage - 1;
    let arrPortion = splitArrayOnSubarrays(filmArr)[renderFilmCardPage];

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–º–∞—Å–∏–≤—É –Ω–∞ —Ç–µ, —á–∏ –≤—ñ–Ω –Ω–µ –ø—É—Å—Ç–∏–π
    if (arrPortion === 'undefined') {
        return;
    }

    // —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –º–∞—Å–∏–≤ —Ñ—ñ–ª—å–º—ñ–≤
    renderFilmCards(arrPortion);

    // —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é
    paginationMarkupRender(currPage, allPages);
}
// ===========================================================



// ===========================================================
/**
 * 
 * @param {array} films - portion of films to render on page
 * @returns nothing
 * it creates markup with films on page and
 * using handlebar 'cardTemplate'
 * render content
 */
function renderFilmCards(films) {
    if (films === undefined) {
        return;
    }

    const markup = films.map(film => {
        const rating = numberConverter(film.vote_average);

        // –§–æ—Ä–º—É—é –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–π –æ–±'—î–∫—Ç –¥–∞–Ω–∏—Ö –¥–ª—è –∑–∞–∫–∏–¥–∞–Ω–Ω—è –≤ handlebar
        const editedFilm = {
            ...film,
            poster_path: `https://image.tmdb.org/t/p/w500${film.poster_path}`,
            genres: film.filmGenres,
            release_date: film.release_date.slice(0, 4),
            vote_average: rating,
        };
        return editedFilm;
    });

    emptyEl.innerHTML = '';
    cards.innerHTML = cardTemplate(markup);
}
// ===========================================================



// ===========================================================
/**
 * @param {array} array - array of film objects that are located in localStorage
 * @returns - array of arrays - array with splited subarray according to 'cardsPerPage'
 * [[], [], []] 
 * length of this big array - is the amount of pages
 */
function splitArrayOnSubarrays(array) {
    const splitedArray = array
        .map(function (el, ind) {
            return ind % cardsPerPage === 0 ? array.slice(ind, ind + cardsPerPage) : null;
        })
        .filter(function (el) {
            return el;
        });
    return splitedArray;
}
// ===========================================================



// ===========================================================
// PAGINATION
// ===========================================================

paginationBox.addEventListener('click', onPaginationLibraryClick);

// –§—É–Ω–∫—Ü—ñ—è —Ä–µ–Ω–¥–µ—Ä—É –∫–Ω–æ–ø–æ–∫ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
function paginationMarkupRender(currentPage, allPages) {
    let markup = '';
    let beforeTwoPage = currentPage - 2;
    let beforePage = currentPage - 1;
    globalCurrentPage = currentPage;
    let afterPage = currentPage + 1;
    let afterTwoPage = currentPage + 2;

    if (currentPage > 1) {
        markup += `<li class="pagination__item slider-arrow prev">&#129144</li>`;
        markup += `<li class="pagination__item">1</li>`;
    }
    if (currentPage > 4) {
        markup += `<li class="pagination__item dots">...</li>`;
    }
    if (currentPage > 3) {
        markup += `<li class="pagination__item">${beforeTwoPage}</li>`;
    }
    if (currentPage > 2) {
        markup += `<li class="pagination__item">${beforePage}</li>`;
    }
    markup += `<li class="pagination__item pagination__item--current">${currentPage}</li>`;

    if (allPages - 1 > currentPage) {
        markup += `<li class="pagination__item">${afterPage}</li>`;
    }
    if (allPages - 2 > currentPage) {
        markup += `<li class="pagination__item">${afterTwoPage}</li>`;
    }
    if (allPages - 3 > currentPage) {
        markup += `<li class="pagination__item dots">...</li>`;
    }
    if (allPages > currentPage) {
        markup += `<li class="pagination__item">${allPages}</li>`;
        markup += `<li class="pagination__item slider-arrow next">&#129146</li>`;
    }
    paginationBox.innerHTML = markup;
}

// –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –∫–ª—ñ–∫—ñ–≤ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
function onPaginationLibraryClick(event) {
    if (event.target.nodeName !== 'LI') {
        return;
    }
    if (event.target.textContent === '...') {
        return;
    }
    if (event.target.textContent === 'ü°∏') {
        window.scrollTo(0, 0);
        if (cards.dataset.position === watchedAttr) {
            globalCurrentPage -= 1;
            contentRender(WATCHED_STORAGE_KEY, watchedAttr, globalCurrentPage);
            return;
        }
        if (cards.dataset.position === queuedAttr) {
            globalCurrentPage -= 1;
            contentRender(QUEUE_STORAGE_KEY, queuedAttr, globalCurrentPage);
            return;
        }
    }
    if (event.target.textContent === 'ü°∫') {
        window.scrollTo(0, 0);
        if (cards.dataset.position === watchedAttr) {
            globalCurrentPage += 1;
            contentRender(WATCHED_STORAGE_KEY, watchedAttr, globalCurrentPage);
            return;
        }
        if (cards.dataset.position === queuedAttr) {
            globalCurrentPage += 1;
            contentRender(QUEUE_STORAGE_KEY, queuedAttr, globalCurrentPage);
            return;
        }
    }

    const page = Number(event.target.textContent);
    globalCurrentPage = page;
    window.scrollTo(0, 0);
    if (cards.dataset.position === watchedAttr) {
        contentRender(WATCHED_STORAGE_KEY, watchedAttr, globalCurrentPage);
        return;
    }
    if (cards.dataset.position === queuedAttr) {
        contentRender(QUEUE_STORAGE_KEY, queuedAttr, globalCurrentPage);
        return;
    }
}



// ===========================================================
// –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
// –§—É–Ω–∫—Ü—ñ—ó –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è / –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–∫–∏
// ===========================================================
async function onModalOpenClick(event) {
    event.preventDefault();
    if (event.target.closest('li')) {
        modalEl.classList.remove('is-hidden');
        modalCloseEl.addEventListener('click', onModalCloseClick);
        backdropEl.addEventListener('click', onBackdropElClick);
        window.addEventListener('keydown', onEscBtnClick);
        // –ü—Ä–∏—Å–≤–æ—é—é –º–æ–¥–∞–ª—Ü—ñ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ—ñ–ª—å–º—ñ–≤, —â–æ —î –≤ –ª–æ–∫–∞–ª–°—Ç–æ—Ä–µ–¥–∂
        if (cards.dataset.position === watchedAttr) {
            let filmAmount = readFromLS(WATCHED_STORAGE_KEY).length;
            modalEl.dataset.filmAmount = filmAmount;
        }
        if (cards.dataset.position === queuedAttr) {
            let filmAmount = readFromLS(QUEUE_STORAGE_KEY).length;
            modalEl.dataset.filmAmount = filmAmount;
        }


    }

}

function onModalCloseClick() {
    modalEl.classList.add('is-hidden');
    modalCloseEl.removeEventListener('click', onModalCloseClick);
    backdropEl.removeEventListener('click', onBackdropElClick);
    window.removeEventListener('keydown', onEscBtnClick);

    // =========================================================
    if (cards.dataset.position === watchedAttr) {
        // data-position="watched" data-page="1"
        let currPageAttr = Number(cards.dataset.page);
        let currFilmAmount = Number(modalEl.dataset.filmAmount)
        let renewedFilmArr = readFromLS(WATCHED_STORAGE_KEY);
        let renewedAllPages = splitArrayOnSubarrays(renewedFilmArr).length;


        // –ü–µ—Ä–µ–º–∞–ª—å–æ–≤–∞–∫–∞, –∫–æ–ª–∏ –≤ –Ω–∞—Å –æ–¥–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —ñ –ª–∏—à–µ –æ–¥–∏–Ω –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ,
        // —è–∫–∏–π –º–∏ –≤–∏–¥–∞–ª—è—î–º–æ
        // if (!renewedAllPages && currPageAttr === 1)
        if (!renewedAllPages) {
            console.log("–¢—É—Ç –∑–∞–≥–ª—É—à–∫–∞");
            emptyEl.innerHTML = `
            <div class="empty">
                <p class="empty__text">Ooops...You didn't select any movie</p>
                <img src="${searchMan}" alt="Man searching" class="empty__img" />
            </div>
        `;
            cards.innerHTML = '';
            return;
        }

        // –ü–µ—Ä–µ–º–∞–ª—å–æ–≤–∫–∞, –∫–æ–ª–∏ –≤ –Ω–∞—Å –±—ñ–ª—å—à–µ –æ–¥–Ω—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏,
        // –ú–∏ –ø–µ—Ä–µ–±—É–≤–∞—î–º–æ –Ω–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ, –Ω–∞ —è–∫—ñ–π –ª–∏—à–µ –æ–¥–∏–Ω –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ,
        // —è–∫–∏–π –º–∏ –≤–∏–¥–∞–ª—è—î–º–æ
        if (currPageAttr > renewedAllPages) {
            contentRender(WATCHED_STORAGE_KEY, watchedAttr, renewedAllPages);
        }

        // –ü–µ—Ä–µ–º–∞–ª—å–æ–≤–∫–∞, –∫–æ–ª–∏ –Ω–∞—à –∞—Ç—Ä–∏–±—É—Ç, —â–æ –ø–æ–∑–Ω–∞—á–∞—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ—ñ–ª—å–º—ñ–≤
        // –≤ –ª–æ–∫–∞–ª–°—Ç–æ—Ä–µ–¥–∂ –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–∫–∏ –Ω–µ —Ä—ñ–≤–Ω–∏–π –¥–æ–≤–∂–∏–Ω—ñ –º–∞—Å–∏–≤—É
        // —É—Å—ñ—Ö —Ñ—ñ–ª—å–º—ñ–≤ –≤ –ª–æ–∫–∞–ª–°—Ç–æ—Ä–µ–¥–∂.
        // –¢–æ–±—Ç–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤–∫–∞ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏–º–µ—Ç—å—Å—è –ª–∏—à–µ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —Ñ—ñ–ª—å–º—É
        if (currFilmAmount !== renewedFilmArr.length) {
            contentRender(WATCHED_STORAGE_KEY, watchedAttr, renewedAllPages);
        }
    }
    // =========================================================


    // =========================================================
    if (cards.dataset.position === queuedAttr) {
        // data-position="watched" data-page="1"
        let currPageAttr = Number(cards.dataset.page);
        let currFilmAmount = Number(modalEl.dataset.filmAmount)
        let renewedFilmArr = readFromLS(QUEUE_STORAGE_KEY);
        let renewedAllPages = splitArrayOnSubarrays(renewedFilmArr).length;


        // –ü–µ—Ä–µ–º–∞–ª—å–æ–≤–∞–∫–∞, –∫–æ–ª–∏ –≤ –Ω–∞—Å –æ–¥–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —ñ –ª–∏—à–µ –æ–¥–∏–Ω –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ,
        // —è–∫–∏–π –º–∏ –≤–∏–¥–∞–ª—è—î–º–æ
        // if (!renewedAllPages && currPageAttr === 1) {
        if (!renewedAllPages) {
            console.log("–¢—É—Ç –∑–∞–≥–ª—É—à–∫–∞");
            emptyEl.innerHTML = `
            <div class="empty">
                <p class="empty__text">Ooops...You didn't select any movie</p>
                <img src="${searchMan}" alt="Man searching" class="empty__img" />
            </div>
        `;
            cards.innerHTML = '';
            return;
        }

        // –ü–µ—Ä–µ–º–∞–ª—å–æ–≤–∫–∞, –∫–æ–ª–∏ –≤ –Ω–∞—Å –±—ñ–ª—å—à–µ –æ–¥–Ω—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏,
        // –ú–∏ –ø–µ—Ä–µ–±—É–≤–∞—î–º–æ –Ω–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ, –Ω–∞ —è–∫—ñ–π –ª–∏—à–µ –æ–¥–∏–Ω –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ,
        // —è–∫–∏–π –º–∏ –≤–∏–¥–∞–ª—è—î–º–æ
        if (currPageAttr > renewedAllPages) {
            contentRender(QUEUE_STORAGE_KEY, queuedAttr, renewedAllPages);
        }

        // –ü–µ—Ä–µ–º–∞–ª—å–æ–≤–∫–∞, –∫–æ–ª–∏ –Ω–∞—à –∞—Ç—Ä–∏–±—É—Ç, —â–æ –ø–æ–∑–Ω–∞—á–∞—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ—ñ–ª—å–º—ñ–≤
        // –≤ –ª–æ–∫–∞–ª–°—Ç–æ—Ä–µ–¥–∂ –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–∫–∏ –Ω–µ —Ä—ñ–≤–Ω–∏–π –¥–æ–≤–∂–∏–Ω—ñ –º–∞—Å–∏–≤—É
        // —É—Å—ñ—Ö —Ñ—ñ–ª—å–º—ñ–≤ –≤ –ª–æ–∫–∞–ª–°—Ç–æ—Ä–µ–¥–∂.
        // –¢–æ–±—Ç–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤–∫–∞ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏–º–µ—Ç—å—Å—è –ª–∏—à–µ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —Ñ—ñ–ª—å–º—É
        if (currFilmAmount !== renewedFilmArr.length) {
            contentRender(QUEUE_STORAGE_KEY, queuedAttr, renewedAllPages);
        }
    }





    // 



    // ------------------------------------------------


}

function onBackdropElClick(event) {
    if (event.target === backdropEl) {
        onModalCloseClick();
    }
}

function onEscBtnClick(event) {
    if (event.code === 'Escape') {
        onModalCloseClick();
    }
}