{"mappings":"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","sources":["src/js/home-page-loading.js","src/js/genres.json","src/js/team-modal.js","src/js/to-top.js"],"sourcesContent":["import { MovieDB } from './api-service';\nimport cardTemplate from '../templates/film-card.hbs';\nimport genres from './genres.json';\nimport { loaderRender } from './preloader';\nimport { numberConverter } from './prepare-number';\n\nconst cards = document.querySelector('.cards');\nconst searchFormEl = document.querySelector('#search-form');\nconst searchFieldEl = document.querySelector('.search-field');\nconst warningField = document.querySelector('.js-warning');\nconst searchResField = document.querySelector('.js-search-results');\nlet globalCurrentPage = 1;\n\nconst movieDB = new MovieDB();\n\nonHomePageLoad();\nsearchFormEl.addEventListener('submit', onSearchFormSubmit);\n\nasync function onSearchFormSubmit(event, globalCurrentPage) {\n  event.preventDefault();\n  cards.dataset.position = 'searched'\n\n  const inputSearchEl = event.target.elements.query.value.trim();\n  console.log(inputSearchEl);\n  if (inputSearchEl.length === 0) {\n    searchResField.textContent = 'Please enter your request';\n    setTimeout(() => {\n      searchResField.textContent = '';\n    }, 3000);\n\n    event.currentTarget.reset();\n    return;\n  }\n\n  movieDB.searchQuery = event.target.elements.query.value;\n\n  anotherFetchSearch(globalCurrentPage);\n\n}\n\nasync function anotherFetchSearch(globalCurrentPage) {\n  try {\n    const { data } = await movieDB.fetchSearch(globalCurrentPage);\n\n    let fetchCurrentPage = data.page;\n    let fetchTotalPages = data.total_pages;\n    paginationMarkup(fetchCurrentPage, fetchTotalPages);\n\n    searchFieldEl.value = '';\n    console.log(data.results);\n    if (data.results.length === 0) {\n      warningField.textContent =\n        'Search result not successful. Enter the correct movie name and try again';\n      setTimeout(() => {\n        warningField.textContent = '';\n      }, 3000);\n\n      return;\n    }\n    renderFilmCards(data.results);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\n\n\nexport async function onHomePageLoad() {\n\n  console.log(cards);\n  cards.dataset.position = 'trends'\n\n  try {\n    const { data } = await movieDB.fetchTrendMovies(globalCurrentPage);\n\n\n    let fetchCurrentPage = data.page;\n    let fetchTotalPages = data.total_pages;\n    paginationMarkup(fetchCurrentPage, fetchTotalPages);\n\n\n    if (data) {\n      loaderRender();\n    }\n    renderFilmCards(data.results);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function renderFilmCards(films) {\n  const markup = films.map(film => {\n    // Повертаю масив текстових жанрів до конкретного фільму\n    const newGenres = film.genre_ids.map(id => {\n      return genres.genres\n        .map(jsonID => {\n          if (jsonID.id === id) {\n            return jsonID.name;\n          }\n        })\n        .join('');\n    });\n\n    // Формую стрічку із жанрами для відображення в картці\n    let genreStr = '';\n\n    if (newGenres.length >= 3) {\n      const strBegin = newGenres.slice(0, 2).join(', ');\n      genreStr = strBegin + ', Other';\n    } else {\n      genreStr = newGenres.join(', ');\n    }\n\n    const rating = numberConverter(film.vote_average);\n\n    // Формую підготовлений об'єкт даних для закидання в handlebar\n    const editedFilm = {\n      ...film,\n      poster_path: `https://image.tmdb.org/t/p/w500${film.poster_path}`,\n      genres: genreStr,\n      release_date: film.release_date.slice(0, 4),\n      vote_average: rating,\n    };\n    return editedFilm;\n  });\n  cards.innerHTML = cardTemplate(markup);\n}\n\n\n\n\n// Добираємся до пагінації результатів пошуку\n\nexport function paginationMarkup(currentPage, allPages) {\n  let markup = '';\n  let beforeTwoPage = currentPage - 2;\n  let beforePage = currentPage - 1;\n  let afterPage = currentPage + 1;\n  let afterTwoPage = currentPage + 2;\n  globalCurrentPage = currentPage;\n\n  if (currentPage > 1) {\n    markup += `<li class=\"pagination__item slider-arrow prev\">&#129144</li>`;\n    markup += `<li class=\"pagination__item\">1</li>`;\n  }\n  if (currentPage > 4) {\n    markup += `<li class=\"pagination__item dots\">...</li>`;\n  }\n  if (currentPage > 3) {\n    markup += `<li class=\"pagination__item\">${beforeTwoPage}</li>`;\n  }\n  if (currentPage > 2) {\n    markup += `<li class=\"pagination__item\">${beforePage}</li>`;\n  }\n  markup += `<li class=\"pagination__item pagination__item--current\">${currentPage}</li>`;\n\n  if (allPages - 1 > currentPage) {\n    markup += `<li class=\"pagination__item\">${afterPage}</li>`;\n  }\n  if (allPages - 2 > currentPage) {\n    markup += `<li class=\"pagination__item\">${afterTwoPage}</li>`;\n  }\n  if (allPages - 3 > currentPage) {\n    markup += `<li class=\"pagination__item dots\">...</li>`;\n  }\n  if (allPages > currentPage) {\n    markup += `<li class=\"pagination__item\">${allPages}</li>`;\n    markup += `<li class=\"pagination__item slider-arrow next\">&#129146</li>`;\n  }\n  paginationBox.innerHTML = markup;\n}\n\nconst paginationBox = document.querySelector('.pagination__list');\n\npaginationBox.addEventListener('click', onPaginationHomeClick);\n\n// paginationMarkup();\n\nasync function onPaginationHomeClick(event) {\n  if (event.target.nodeName !== 'LI') {\n    return;\n  }\n  if (event.target.textContent === '...') {\n    return;\n  }\n  if (event.target.textContent === '🡸') {\n    if (cards.dataset.position === 'trends') {\n      onHomePageLoad((globalCurrentPage -= 1)).then(data => {\n        renderFilmCards(data.results);\n        paginationMarkup(data.page, data.total_pages);\n      });\n      return;\n    }\n    if (cards.dataset.position === 'searched') {\n      console.log('searchres click next');\n      anotherFetchSearch((globalCurrentPage -= 1)).then(data => {\n        renderFilmCards(data.results);\n        paginationMarkup(data.page, data.total_pages);\n      });\n      return;\n    }\n  }\n  if (event.target.textContent === '🡺') {\n    if (cards.dataset.position === 'trends') {\n      onHomePageLoad((globalCurrentPage += 1)).then(data => {\n        renderFilmCards(data.results);\n        paginationMarkup(data.page, data.total_pages);\n      });\n      return;\n    }\n    if (cards.dataset.position === 'searched') {\n      console.log('searchres click next');\n      anotherFetchSearch((globalCurrentPage += 1)).then(data => {\n        renderFilmCards(data.results);\n        paginationMarkup(data.page, data.total_pages);\n      });\n      return;\n    }\n  }\n\n  const page = Number(event.target.textContent);\n  globalCurrentPage = page;\n\n  if (cards.dataset.position === 'trends') {\n    onHomePageLoad(globalCurrentPage).then(data => {\n      renderFilmCards(data.results);\n      paginationMarkup(data.page, data.total_pages);\n    });\n    return;\n  }\n  if (cards.dataset.position === 'searched') {\n    console.log('searchres click next');\n    anotherFetchSearch(globalCurrentPage).then(data => {\n      renderFilmCards(data.results);\n      paginationMarkup(data.page, data.total_pages);\n    });\n    return;\n  }\n}","{\n  \"genres\": [\n    { \"id\": 28, \"name\": \"Action\" },\n    { \"id\": 12, \"name\": \"Adventure\" },\n    { \"id\": 16, \"name\": \"Animation\" },\n    { \"id\": 35, \"name\": \"Comedy\" },\n    { \"id\": 80, \"name\": \"Crime\" },\n    { \"id\": 99, \"name\": \"Documentary\" },\n    { \"id\": 18, \"name\": \"Drama\" },\n    { \"id\": 10751, \"name\": \"Family\" },\n    { \"id\": 14, \"name\": \"Fantasy\" },\n    { \"id\": 36, \"name\": \"History\" },\n    { \"id\": 27, \"name\": \"Horror\" },\n    { \"id\": 10402, \"name\": \"Music\" },\n    { \"id\": 9648, \"name\": \"Mystery\" },\n    { \"id\": 10749, \"name\": \"Romance\" },\n    { \"id\": 878, \"name\": \"Science Fiction\" },\n    { \"id\": 10770, \"name\": \"TV Movie\" },\n    { \"id\": 53, \"name\": \"Thriller\" },\n    { \"id\": 10752, \"name\": \"War\" },\n    { \"id\": 37, \"name\": \"Western\" }\n  ]\n}\n","const teamModalLinkEl = document.querySelector('.js-team-modal');\nconst teamModCloseEl = document.querySelector('[data-modal-team-close]');\nconst teamModalEl = document.querySelector('[data-modal-team]');\nconst backdrpTeamEl = document.querySelector('.backdrop-team');\nconst body = document.querySelector('body');\n// слухач на батьківський UL карток\nteamModalLinkEl.addEventListener('click', onModalOpenClick);\n\nfunction onModalOpenClick(event) {\n  event.preventDefault();\n  body.classList.add('noScroll');\n  teamModalEl.classList.remove('is-hidden');\n  teamModCloseEl.addEventListener('click', onModalCloseClick);\n  backdrpTeamEl.addEventListener('click', onBackdropElClick);\n  window.addEventListener('keydown', onEscBtnClick);\n}\n\nfunction onModalCloseClick() {\n  teamModalEl.classList.add('is-hidden');\n  body.classList.remove('noScroll');\n  teamModCloseEl.removeEventListener('click', onModalCloseClick);\n  backdrpTeamEl.removeEventListener('click', onBackdropElClick);\n  window.removeEventListener('keydown', onEscBtnClick);\n}\n\nfunction onBackdropElClick(event) {\n  if (event.target === backdrpTeamEl) {\n    body.classList.remove('noScroll');\n    onModalCloseClick();\n  }\n}\nfunction onEscBtnClick(event) {\n  if (event.code === 'Escape') {\n    body.classList.remove('noScroll');\n    onModalCloseClick();\n  }\n}\n","const backToTop = document.querySelector('.back_to_top');\n\nwindow.addEventListener('scroll', trackScroll);\nbackToTop.addEventListener('click', goToTop);\n\nfunction trackScroll() {\n  const scrolled = window.pageYOffset;\n  const coords = document.documentElement.clientHeight;\n\n  if (scrolled > coords) {\n    backToTop.classList.add('back_to_top-show');\n  }\n  if (scrolled < coords) {\n    backToTop.classList.remove('back_to_top-show');\n  }\n}\n\nfunction goToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n}\n"],"names":["$7me8F","parcelRequire","$1a18d98a372d8e28$exports","JSON","parse","$2fcf18421cc8a283$var$cards","document","querySelector","$2fcf18421cc8a283$var$searchFormEl","$2fcf18421cc8a283$var$searchFieldEl","$2fcf18421cc8a283$var$warningField","$2fcf18421cc8a283$var$searchResField","$2fcf18421cc8a283$var$globalCurrentPage","$2fcf18421cc8a283$var$movieDB","MovieDB","async","$2fcf18421cc8a283$var$anotherFetchSearch","globalCurrentPage2","data","fetchSearch","$2fcf18421cc8a283$export$a88ca8237831132f","page","total_pages","value","console","log","results","length","textContent","setTimeout","$2fcf18421cc8a283$export$e6243425577ce802","err","$2fcf18421cc8a283$export$fc714631abe23e77","dataset","position","fetchTrendMovies","$ioBS9","loaderRender","films","markup","map","film","newGenres","genre_ids","id","$parcel$interopDefault","genres","jsonID","name","join","genreStr","slice","rating","$3ab2c","numberConverter","vote_average","poster_path","release_date","innerHTML","$kW34H","default","currentPage","allPages","$2fcf18421cc8a283$var$paginationBox","addEventListener","event","globalCurrentPage1","preventDefault","inputSearchEl","target","elements","query","trim","currentTarget","reset","searchQuery","nodeName","then","Number","$8221e5996eb79faa$var$teamModalLinkEl","$8221e5996eb79faa$var$teamModCloseEl","$8221e5996eb79faa$var$teamModalEl","$8221e5996eb79faa$var$backdrpTeamEl","$8221e5996eb79faa$var$body","$8221e5996eb79faa$var$onModalCloseClick","classList","add","remove","removeEventListener","$8221e5996eb79faa$var$onBackdropElClick","window","$8221e5996eb79faa$var$onEscBtnClick","code","$3b654a7bdb477c40$var$backToTop","scrolled","pageYOffset","coords","documentElement","clientHeight","scrollTo","top","behavior"],"version":3,"file":"index.21b57c44.js.map"}